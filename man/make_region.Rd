% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_region.R
\name{make_region}
\alias{make_region}
\title{Make species region}
\usage{
make_region(
  rangelist,
  buffer,
  boundary,
  grid,
  crs = 3857,
  sub = F,
  lat.lo = NA,
  lat.hi = NA,
  lon.lo = NA,
  lon.hi = NA,
  continuous = F,
  rm.clumps = F,
  clump.size = 20,
  cell.size = 24999998
)
}
\arguments{
\item{rangelist}{(list) List of ranges generated from get_range()}

\item{buffer}{(numeric) Buffer size, unit depends on CRS}

\item{boundary}{(sf object) A that says where to cut off the region}

\item{grid}{(sf object) grid overlay}

\item{crs}{default is 3857 so that buffer size can be meters}

\item{sub}{whether to buffer around centroid (sub = T) or around full range (sub = F)}

\item{lat.lo}{(numeric) lower boundary of latitude (degrees)}

\item{lat.hi}{(numeric) upper boundary of latitude (degrees)}

\item{lon.lo}{(numeric) lower boundary of longitude (degrees)}

\item{lon.hi}{(numeric) upper boundary of longitude (degrees)}

\item{continuous}{(logical) whether to keep only a continuous section of the range (T) or keep the whole range (F)}

\item{rm.clumps}{(logical) whether to remove clumps of cells of size clump.size}

\item{clump.size}{(numeric) number of cells in clumps to keep}

\item{cell.size}{(numeric) cell area of grid}
}
\value{
A list containing ranges, the full region, sp.grid, and the boundary
}
\description{
Define the region for inference using a buffer around external range boundaries.
}
\examples{
\dontrun{
# Predownload range boundaries of interest

# Provide the path to each boundary
range.path <- c("GAP/aAZTOx_CONUS_Range_2001v1/",
                "IUCN/")

# Give each boundary a name
range.name <- c("GAP", "IUCN")

rangelist <- get_range(range.path,
                       range.name,
                       crs = 4326)

region <- make_region(rangelist,
                      buffer = 50000,
                      crs = 3857,
                      sub = F,
                      boundary = usa,
                      grid = conus.grid)

}
}
